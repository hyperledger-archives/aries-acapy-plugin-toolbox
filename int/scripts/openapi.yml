openapi: 3.0.1
info:
  title: Aries Cloud Agent
  version: v0.6.0
servers:
- url: /
tags:
- name: action-menu
  description: Menu interaction over connection
  externalDocs:
    url: "http://example.com"
- name: basicmessage
  description: Simple messaging
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/aries-rfcs/tree/527849ec3aa2a8fd47a7bb6c57f918ff8bcb5e8c/features/0095-basic-message
- name: connection
  description: Connection management
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/aries-rfcs/tree/9b0aaa39df7e8bd434126c4b33c097aae78d65bf/features/0160-connection-protocol
- name: credential-definition
  description: Credential definition operations
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/indy-node/blob/master/design/anoncreds.md#cred_def
- name: credentials
  description: Holder credential management
  externalDocs:
    description: Overview
    url: https://w3c.github.io/vc-data-model/#credentials
- name: did-exchange
  description: Connection management via DID exchange
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/aries-rfcs/tree/25464a5c8f8a17b14edaa4310393df6094ace7b0/features/0023-did-exchange
- name: introduction
  description: Introduction of known parties
  externalDocs:
    url: "http://example.com"
- name: issue-credential v1.0
  description: Credential issue v1.0
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/aries-rfcs/tree/bb42a6c35e0d5543718fb36dd099551ab192f7b0/features/0036-issue-credential
- name: issue-credential v2.0
  description: Credential issue v2.0
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/aries-rfcs/tree/6509b84abaf5760a8ba1744c8078d513f28456db/features/0453-issue-credential-v2
- name: ledger
  description: Interaction with ledger
  externalDocs:
    description: Overview
    url: https://hyperledger-indy.readthedocs.io/projects/plenum/en/latest/storage.html#ledger
- name: mediation
  description: Mediation management
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/aries-rfcs/tree/fa8dc4ea1e667eb07db8f9ffeaf074a4455697c0/features/0211-route-coordination
- name: out-of-band
  description: Out-of-band connections
  externalDocs:
    description: Design
    url: https://github.com/hyperledger/aries-rfcs/tree/2da7fc4ee043effa3a9960150e7ba8c9a4628b68/features/0434-outofband
- name: present-proof
  description: Proof presentation
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/aries-rfcs/tree/4fae574c03f9f1013db30bf2c0c676b1122f7149/features/0037-present-proof
- name: revocation
  description: Revocation registry management
  externalDocs:
    description: Overview
    url: https://github.com/hyperledger/indy-hipe/tree/master/text/0011-cred-revocation
- name: schema
  description: Schema operations
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/indy-node/blob/master/design/anoncreds.md#schema
- name: server
  description: Feature discovery
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/aries-rfcs/tree/9b7ab9814f2e7d1108f74aca6f3d2e5d62899473/features/0031-discover-features
- name: trustping
  description: Trust-ping over connection
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/aries-rfcs/tree/527849ec3aa2a8fd47a7bb6c57f918ff8bcb5e8c/features/0048-trust-ping
- name: wallet
  description: DID and tag policy management
  externalDocs:
    description: Design
    url: https://github.com/hyperledger/indy-sdk/tree/master/docs/design/003-wallet-storage
paths:
  /action-menu/{conn_id}/close:
    post:
      tags:
      - action-menu
      summary: Close the active menu associated with a connection
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionMenuModulesResult'
  /action-menu/{conn_id}/fetch:
    post:
      tags:
      - action-menu
      summary: Fetch the active menu
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionMenuModulesResult'
  /action-menu/{conn_id}/perform:
    post:
      tags:
      - action-menu
      summary: Perform an action associated with the active menu
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/PerformRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionMenuModulesResult'
      x-codegen-request-body-name: body
  /action-menu/{conn_id}/request:
    post:
      tags:
      - action-menu
      summary: Request the active menu
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionMenuModulesResult'
  /action-menu/{conn_id}/send-menu:
    post:
      tags:
      - action-menu
      summary: Send an action menu to a connection
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/SendMenu'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionMenuModulesResult'
      x-codegen-request-body-name: body
  /connections:
    get:
      operationId: get_connections
      tags:
      - connection
      summary: Query agent-to-agent connections
      parameters:
      - name: alias
        in: query
        description: Alias
        schema:
          type: string
      - name: invitation_key
        in: query
        description: invitation key
        schema:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
          type: string
      - name: my_did
        in: query
        description: My DID
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      - name: state
        in: query
        description: Connection state
        schema:
          type: string
          enum:
          - start
          - error
          - response
          - init
          - abandoned
          - active
          - request
          - invitation
          - completed
      - name: their_did
        in: query
        description: Their DID
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      - name: their_role
        in: query
        description: Their role in the connection protocol
        schema:
          type: string
          enum:
          - invitee
          - requester
          - inviter
          - responder
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionList'
  /connections/create-invitation:
    post:
      operationId: create_invitation
      tags:
      - connection
      summary: Create a new connection invitation
      parameters:
      - name: alias
        in: query
        description: Alias
        schema:
          type: string
      - name: auto_accept
        in: query
        description: Auto-accept connection (defaults to configuration)
        schema:
          type: string
      - name: multi_use
        in: query
        description: Create invitation for multiple use (default false)
        schema:
          type: boolean
      - name: public
        in: query
        description: Create invitation from public DID (default false)
        schema:
          type: boolean
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CreateInvitationRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationResult'
      x-codegen-request-body-name: body
  /connections/create-static:
    post:
      operationId: create_static
      tags:
      - connection
      summary: Create a new static connection
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ConnectionStaticRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionStaticResult'
      x-codegen-request-body-name: body
  /connections/receive-invitation:
    post:
      operationId: receive_invitation
      tags:
      - connection
      summary: Receive a new connection invitation
      parameters:
      - name: alias
        in: query
        description: Alias
        schema:
          type: string
      - name: auto_accept
        in: query
        description: Auto-accept connection (defaults to configuration)
        schema:
          type: string
      - name: mediation_id
        in: query
        description: Identifier for active mediation record to be used
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ReceiveInvitationRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnRecord'
      x-codegen-request-body-name: body
  /connections/{conn_id}:
    get:
      operationId: get_connection
      tags:
      - connection
      summary: Fetch a single connection record
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnRecord'
    delete:
      operationId: delete_connection
      tags:
      - connection
      summary: Remove an existing connection record
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionModuleResponse'
  /connections/{conn_id}/accept-invitation:
    post:
      tags:
      - connection
      summary: Accept a stored connection invitation
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      - name: mediation_id
        in: query
        description: Identifier for active mediation record to be used
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      - name: my_endpoint
        in: query
        description: My URL endpoint
        schema:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
      - name: my_label
        in: query
        description: Label for connection
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnRecord'
  /connections/{conn_id}/accept-request:
    post:
      tags:
      - connection
      summary: Accept a stored connection request
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      - name: my_endpoint
        in: query
        description: My URL endpoint
        schema:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnRecord'
  /connections/{conn_id}/endpoints:
    get:
      tags:
      - connection
      summary: Fetch connection remote endpoint
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointsResult'
  /connections/{conn_id}/establish-inbound/{ref_id}:
    post:
      tags:
      - connection
      summary: Assign another connection as the inbound connection
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      - name: ref_id
        in: path
        description: Inbound connection identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionModuleResponse'
  /connections/{conn_id}/metadata:
    get:
      operationId: get_metadata
      tags:
      - connection
      summary: Fetch connection metadata
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      - name: key
        in: query
        description: Key to retrieve.
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionMetadata'
    post:
      operationId: set_metadata
      tags:
      - connection
      summary: Set connection metadata
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ConnectionMetadataSetRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionMetadata'
      x-codegen-request-body-name: body
  /connections/{conn_id}/send-message:
    post:
      operationId: send_basicmessage
      tags:
      - basicmessage
      summary: Send a basic message to a connection
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/SendMessage'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicMessageModuleResponse'
      x-codegen-request-body-name: body
  /connections/{conn_id}/send-ping:
    post:
      tags:
      - trustping
      summary: Send a trust ping to a connection
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/PingRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingRequestResponse'
      x-codegen-request-body-name: body
  /connections/{conn_id}/start-introduction:
    post:
      tags:
      - introduction
      summary: Start an introduction between two connections
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      - name: target_connection_id
        in: query
        description: Target connection identifier
        required: true
        schema:
          type: string
      - name: message
        in: query
        description: Message
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntroModuleResponse'
  /credential-definitions:
    post:
      operationId: publish_cred_def
      tags:
      - credential-definition
      summary: Sends a credential definition to the ledger
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/CredentialDefinitionSendRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialDefinitionSendResults'
      x-codegen-request-body-name: body
  /credential-definitions/created:
    get:
      tags:
      - credential-definition
      summary: Search for matching credential definitions that agent originated
      parameters:
      - name: cred_def_id
        in: query
        description: Credential definition id
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
      - name: issuer_did
        in: query
        description: Issuer DID
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      - name: schema_id
        in: query
        description: Schema identifier
        schema:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
      - name: schema_issuer_did
        in: query
        description: Schema issuer DID
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      - name: schema_name
        in: query
        description: Schema name
        schema:
          type: string
      - name: schema_version
        in: query
        description: Schema version
        schema:
          pattern: ^[0-9.]+$
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialDefinitionsCreatedResults'
  /credential-definitions/{cred_def_id}:
    get:
      tags:
      - credential-definition
      summary: Gets a credential definition from the ledger
      parameters:
      - name: cred_def_id
        in: path
        description: Credential definition identifier
        required: true
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialDefinitionGetResults'
  /credential/mime-types/{credential_id}:
    get:
      tags:
      - credentials
      summary: Get attribute MIME types from wallet
      parameters:
      - name: credential_id
        in: path
        description: Credential identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeMimeTypesResult'
  /credential/revoked/{credential_id}:
    get:
      tags:
      - credentials
      summary: Query credential revocation status by id
      parameters:
      - name: credential_id
        in: path
        description: Credential identifier
        required: true
        schema:
          type: string
      - name: from
        in: query
        description: Earliest epoch of revocation status interval of interest
        schema:
          pattern: ^[0-9]*$
          type: string
      - name: to
        in: query
        description: Latest epoch of revocation status interval of interest
        schema:
          pattern: ^[0-9]*$
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredRevokedResult'
  /credential/{credential_id}:
    get:
      tags:
      - credentials
      summary: Fetch a credential from wallet by id
      parameters:
      - name: credential_id
        in: path
        description: Credential identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredBrief'
    delete:
      tags:
      - credentials
      summary: Remove a credential from the wallet by id
      parameters:
      - name: credential_id
        in: path
        description: Credential identifier
        required: true
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HolderModuleResponse'
  /credentials:
    get:
      tags:
      - credentials
      summary: Fetch credentials from wallet
      parameters:
      - name: count
        in: query
        description: Maximum number to retrieve
        schema:
          pattern: ^[1-9][0-9]*$
          type: string
      - name: start
        in: query
        description: Start index
        schema:
          pattern: ^[0-9]*$
          type: string
      - name: wql
        in: query
        description: (JSON) WQL query
        schema:
          pattern: ^{.*}$
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredBriefList'
  /didexchange/create-request:
    post:
      tags:
      - did-exchange
      summary: Create request against public DID's implicit invitation
      parameters:
      - name: their_public_did
        in: query
        description: Public DID to which to request connection
        required: true
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      - name: mediation_id
        in: query
        description: Identifier for active mediation record to be used
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      - name: my_endpoint
        in: query
        description: My URL endpoint
        schema:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
      - name: my_label
        in: query
        description: Label for connection request
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DIDXRequest'
  /didexchange/receive-request:
    post:
      tags:
      - did-exchange
      summary: Receive request against public DID's implicit invitation
      parameters:
      - name: alias
        in: query
        description: Alias for connection
        schema:
          type: string
      - name: auto_accept
        in: query
        description: Auto-accept connection (defaults to configuration)
        schema:
          type: string
      - name: mediation_id
        in: query
        description: Identifier for active mediation record to be used
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      - name: my_endpoint
        in: query
        description: My URL endpoint
        schema:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/DIDXRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnRecord'
      x-codegen-request-body-name: body
  /didexchange/{conn_id}/accept-invitation:
    post:
      tags:
      - did-exchange
      summary: Accept a stored connection invitation
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      - name: my_endpoint
        in: query
        description: My URL endpoint
        schema:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
      - name: my_label
        in: query
        description: Label for connection request
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnRecord'
  /didexchange/{conn_id}/accept-request:
    post:
      tags:
      - did-exchange
      summary: Accept a stored connection request
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      - name: mediation_id
        in: query
        description: Identifier for active mediation record to be used
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      - name: my_endpoint
        in: query
        description: My URL endpoint
        schema:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnRecord'
  /features:
    get:
      tags:
      - server
      summary: Query supported features
      parameters:
      - name: query
        in: query
        description: Query
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
  /issue-credential-2.0/create:
    post:
      tags:
      - issue-credential v2.0
      summary: Send holder a credential, automating entire flow
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/V20CredCreate'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20CredExRecord'
      x-codegen-request-body-name: body
  /issue-credential-2.0/records:
    get:
      tags:
      - issue-credential v2.0
      summary: Fetch all credential exchange records
      parameters:
      - name: connection_id
        in: query
        description: Connection identifier
        schema:
          type: string
          format: uuid
      - name: role
        in: query
        description: Role assigned in credential exchange
        schema:
          type: string
          enum:
          - issuer
          - holder
      - name: state
        in: query
        description: Credential exchange state
        schema:
          type: string
          enum:
          - proposal-sent
          - proposal-received
          - offer-sent
          - offer-received
          - request-sent
          - request-received
          - credential-issued
          - credential-received
          - done
      - name: thread_id
        in: query
        description: Thread identifier
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20CredExRecordListResult'
  /issue-credential-2.0/records/{cred_ex_id}:
    get:
      tags:
      - issue-credential v2.0
      summary: Fetch a single credential exchange record
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20CredExRecordDetail'
    delete:
      tags:
      - issue-credential v2.0
      summary: Remove an existing credential exchange record
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20IssueCredentialModuleResponse'
  /issue-credential-2.0/records/{cred_ex_id}/issue:
    post:
      tags:
      - issue-credential v2.0
      summary: Send holder a credential
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/V20CredIssueRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20CredExRecordDetail'
      x-codegen-request-body-name: body
  /issue-credential-2.0/records/{cred_ex_id}/problem-report:
    post:
      tags:
      - issue-credential v2.0
      summary: Send a problem report for credential exchange
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/V20CredIssueProblemReportRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20IssueCredentialModuleResponse'
      x-codegen-request-body-name: body
  /issue-credential-2.0/records/{cred_ex_id}/send-offer:
    post:
      tags:
      - issue-credential v2.0
      summary: Send holder a credential offer in reference to a proposal with preview
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20CredExRecord'
  /issue-credential-2.0/records/{cred_ex_id}/send-request:
    post:
      tags:
      - issue-credential v2.0
      summary: Send issuer a credential request
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20CredExRecord'
  /issue-credential-2.0/records/{cred_ex_id}/store:
    post:
      tags:
      - issue-credential v2.0
      summary: Store a received credential
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/V20CredStoreRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20CredExRecordDetail'
      x-codegen-request-body-name: body
  /issue-credential-2.0/send:
    post:
      tags:
      - issue-credential v2.0
      summary: Send holder a credential, automating entire flow
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/V20CredProposalRequestPreviewMand'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20CredExRecord'
      x-codegen-request-body-name: body
  /issue-credential-2.0/send-offer:
    post:
      tags:
      - issue-credential v2.0
      summary: Send holder a credential offer, independent of any proposal
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/V20CredOfferRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20CredExRecord'
      x-codegen-request-body-name: body
  /issue-credential-2.0/send-proposal:
    post:
      tags:
      - issue-credential v2.0
      summary: Send issuer a credential proposal
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/V20CredProposalRequestPreviewOpt'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V20CredExRecord'
      x-codegen-request-body-name: body
  /issue-credential/create:
    post:
      tags:
      - issue-credential v1.0
      summary: Send holder a credential, automating entire flow
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/V10CredentialCreate'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10CredentialExchange'
      x-codegen-request-body-name: body
  /issue-credential/records:
    get:
      tags:
      - issue-credential v1.0
      summary: Fetch all credential exchange records
      parameters:
      - name: connection_id
        in: query
        description: Connection identifier
        schema:
          type: string
          format: uuid
      - name: role
        in: query
        description: Role assigned in credential exchange
        schema:
          type: string
          enum:
          - issuer
          - holder
      - name: state
        in: query
        description: Credential exchange state
        schema:
          type: string
          enum:
          - proposal_sent
          - proposal_received
          - offer_sent
          - offer_received
          - request_sent
          - request_received
          - credential_issued
          - credential_received
          - credential_acked
      - name: thread_id
        in: query
        description: Thread identifier
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10CredentialExchangeListResult'
  /issue-credential/records/{cred_ex_id}:
    get:
      tags:
      - issue-credential v1.0
      summary: Fetch a single credential exchange record
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10CredentialExchange'
    delete:
      tags:
      - issue-credential v1.0
      summary: Remove an existing credential exchange record
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialModuleResponse'
  /issue-credential/records/{cred_ex_id}/issue:
    post:
      tags:
      - issue-credential v1.0
      summary: Send holder a credential
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/V10CredentialIssueRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10CredentialExchange'
      x-codegen-request-body-name: body
  /issue-credential/records/{cred_ex_id}/problem-report:
    post:
      tags:
      - issue-credential v1.0
      summary: Send a problem report for credential exchange
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/V10CredentialProblemReportRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueCredentialModuleResponse'
      x-codegen-request-body-name: body
  /issue-credential/records/{cred_ex_id}/send-offer:
    post:
      tags:
      - issue-credential v1.0
      summary: Send holder a credential offer in reference to a proposal with preview
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10CredentialExchange'
  /issue-credential/records/{cred_ex_id}/send-request:
    post:
      tags:
      - issue-credential v1.0
      summary: Send issuer a credential request
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10CredentialExchange'
  /issue-credential/records/{cred_ex_id}/store:
    post:
      tags:
      - issue-credential v1.0
      summary: Store a received credential
      parameters:
      - name: cred_ex_id
        in: path
        description: Credential exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/V10CredentialStoreRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10CredentialExchange'
      x-codegen-request-body-name: body
  /issue-credential/send:
    post:
      operationId: issue_credential_automated
      tags:
      - issue-credential v1.0
      summary: Send holder a credential, automating entire flow
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/V10CredentialProposalRequestMand'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10CredentialExchange'
      x-codegen-request-body-name: body
  /issue-credential/send-offer:
    post:
      tags:
      - issue-credential v1.0
      summary: Send holder a credential offer, independent of any proposal
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/V10CredentialOfferRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10CredentialExchange'
      x-codegen-request-body-name: body
  /issue-credential/send-proposal:
    post:
      tags:
      - issue-credential v1.0
      summary: Send issuer a credential proposal
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/V10CredentialProposalRequestOpt'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10CredentialExchange'
      x-codegen-request-body-name: body
  /ledger/did-endpoint:
    get:
      tags:
      - ledger
      summary: Get the endpoint for a DID from the ledger.
      parameters:
      - name: did
        in: query
        description: DID of interest
        required: true
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      - name: endpoint_type
        in: query
        description: Endpoint type of interest (default 'Endpoint')
        schema:
          type: string
          enum:
          - Endpoint
          - Profile
          - LinkedDomains
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerModulesResult'
  /ledger/did-verkey:
    get:
      tags:
      - ledger
      summary: Get the verkey for a DID from the ledger.
      parameters:
      - name: did
        in: query
        description: DID of interest
        required: true
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerModulesResult'
  /ledger/get-nym-role:
    get:
      tags:
      - ledger
      summary: Get the role from the NYM registration of a public DID.
      parameters:
      - name: did
        in: query
        description: DID of interest
        required: true
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerModulesResult'
  /ledger/register-nym:
    post:
      tags:
      - ledger
      summary: Send a NYM registration to the ledger.
      parameters:
      - name: did
        in: query
        description: DID to register
        required: true
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      - name: verkey
        in: query
        description: Verification key
        required: true
        schema:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
          type: string
      - name: alias
        in: query
        description: Alias
        schema:
          type: string
      - name: role
        in: query
        description: Role
        schema:
          type: string
          enum:
          - STEWARD
          - TRUSTEE
          - ENDORSER
          - NETWORK_MONITOR
          - reset
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerModulesResult'
  /ledger/rotate-public-did-keypair:
    patch:
      tags:
      - ledger
      summary: Rotate key pair for public DID.
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerModulesResult'
  /ledger/taa:
    get:
      operationId: fetch_taa
      tags:
      - ledger
      summary: Fetch the current transaction author agreement, if any
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TAAResult'
  /ledger/taa/accept:
    post:
      operationId: accept_taa
      tags:
      - ledger
      summary: Accept the transaction author agreement
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/TAAAccept'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LedgerModulesResult'
      x-codegen-request-body-name: body
  /mediation/default-mediator:
    get:
      tags:
      - mediation
      summary: Get default mediator
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediationRecord'
    delete:
      tags:
      - mediation
      summary: Clear default mediator
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediationRecord'
  /mediation/keylists:
    get:
      tags:
      - mediation
      summary: Retrieve keylists by connection or role
      parameters:
      - name: conn_id
        in: query
        description: Connection identifier (optional)
        schema:
          type: string
          format: uuid
      - name: role
        in: query
        description: Filer on role, 'client' for keys         mediated by other agents,
          'server' for keys         mediated by this agent
        schema:
          type: string
          default: server
          enum:
          - client
          - server
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Keylist'
  /mediation/keylists/{mediation_id}/send-keylist-query:
    post:
      tags:
      - mediation
      summary: Send keylist query to mediator
      parameters:
      - name: mediation_id
        in: path
        description: Mediation record identifier
        required: true
        schema:
          type: string
          format: uuid
      - name: paginate_limit
        in: query
        description: limit number of results
        schema:
          type: integer
          format: int32
          default: -1
      - name: paginate_offset
        in: query
        description: offset to use in pagination
        schema:
          type: integer
          format: int32
          default: 0
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/KeylistQueryFilterRequest'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeylistQuery'
      x-codegen-request-body-name: body
  /mediation/keylists/{mediation_id}/send-keylist-update:
    post:
      tags:
      - mediation
      summary: Send keylist update to mediator
      parameters:
      - name: mediation_id
        in: path
        description: Mediation record identifier
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/KeylistUpdateRequest'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeylistUpdate'
      x-codegen-request-body-name: body
  /mediation/request/{conn_id}:
    post:
      tags:
      - mediation
      summary: Request mediation from connection
      parameters:
      - name: conn_id
        in: path
        description: Connection identifier
        required: true
        schema:
          type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/MediationCreateRequest'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediationRecord'
      x-codegen-request-body-name: body
  /mediation/requests:
    get:
      tags:
      - mediation
      summary: Query mediation requests, returns list of all mediation records
      parameters:
      - name: conn_id
        in: query
        description: Connection identifier (optional)
        schema:
          type: string
          format: uuid
      - name: mediator_terms
        in: query
        description: List of mediator rules for recipient
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            description: Indicate terms that the mediator requires the recipient to
              agree to
      - name: recipient_terms
        in: query
        description: List of recipient rules for mediation
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            description: Indicate terms that the recipient requires the mediator to
              agree to
      - name: state
        in: query
        description: Mediation state (optional)
        schema:
          type: string
          enum:
          - request
          - granted
          - denied
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediationList'
  /mediation/requests/{mediation_id}:
    get:
      tags:
      - mediation
      summary: Retrieve mediation request record
      parameters:
      - name: mediation_id
        in: path
        description: Mediation record identifier
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediationRecord'
    delete:
      tags:
      - mediation
      summary: Delete mediation request by ID
      parameters:
      - name: mediation_id
        in: path
        description: Mediation record identifier
        required: true
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediationRecord'
  /mediation/requests/{mediation_id}/deny:
    post:
      tags:
      - mediation
      summary: Deny a stored mediation request
      parameters:
      - name: mediation_id
        in: path
        description: Mediation record identifier
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/AdminMediationDeny'
        required: false
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediationDeny'
      x-codegen-request-body-name: body
  /mediation/requests/{mediation_id}/grant:
    post:
      tags:
      - mediation
      summary: Grant received mediation
      parameters:
      - name: mediation_id
        in: path
        description: Mediation record identifier
        required: true
        schema:
          type: string
          format: uuid
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediationGrant'
  /mediation/{mediation_id}/default-mediator:
    put:
      tags:
      - mediation
      summary: Set default mediator
      parameters:
      - name: mediation_id
        in: path
        description: Mediation record identifier
        required: true
        schema:
          type: string
          format: uuid
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediationRecord'
  /out-of-band/create-invitation:
    post:
      tags:
      - out-of-band
      summary: Create a new connection invitation
      parameters:
      - name: auto_accept
        in: query
        description: Auto-accept connection (defaults to configuration)
        schema:
          type: string
      - name: multi_use
        in: query
        description: Create invitation for multiple use (default false)
        schema:
          type: boolean
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/InvitationCreateRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationRecord'
      x-codegen-request-body-name: body
  /out-of-band/receive-invitation:
    post:
      tags:
      - out-of-band
      summary: Receive a new connection invitation
      parameters:
      - name: alias
        in: query
        description: Alias for connection
        schema:
          type: string
      - name: auto_accept
        in: query
        description: Auto-accept connection (defaults to configuration)
        schema:
          type: string
      - name: mediation_id
        in: query
        description: Identifier for active mediation record to be used
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      - name: use_existing_connection
        in: query
        description: Use an existing connection, if possible
        schema:
          type: boolean
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/InvitationReceiveRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnRecord'
      x-codegen-request-body-name: body
  /plugins:
    get:
      tags:
      - server
      summary: Fetch the list of loaded plugins
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminModules'
  /present-proof/create-request:
    post:
      tags:
      - present-proof
      summary: "\n    Creates a presentation request not bound to any proposal or\
        \ existing connection\n    "
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/V10PresentationCreateRequestRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10PresentationExchange'
      x-codegen-request-body-name: body
  /present-proof/records:
    get:
      tags:
      - present-proof
      summary: Fetch all present-proof exchange records
      parameters:
      - name: connection_id
        in: query
        description: Connection identifier
        schema:
          type: string
          format: uuid
      - name: role
        in: query
        description: Role assigned in presentation exchange
        schema:
          type: string
          enum:
          - prover
          - verifier
      - name: state
        in: query
        description: Presentation exchange state
        schema:
          type: string
          enum:
          - proposal_sent
          - proposal_received
          - request_sent
          - request_received
          - presentation_sent
          - presentation_received
          - verified
          - presentation_acked
      - name: thread_id
        in: query
        description: Thread identifier
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10PresentationExchangeList'
  /present-proof/records/{pres_ex_id}:
    get:
      tags:
      - present-proof
      summary: Fetch a single presentation exchange record
      parameters:
      - name: pres_ex_id
        in: path
        description: Presentation exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10PresentationExchange'
    delete:
      tags:
      - present-proof
      summary: Remove an existing presentation exchange record
      parameters:
      - name: pres_ex_id
        in: path
        description: Presentation exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresentProofModuleResponse'
  /present-proof/records/{pres_ex_id}/credentials:
    get:
      tags:
      - present-proof
      summary: Fetch credentials for a presentation request from wallet
      parameters:
      - name: pres_ex_id
        in: path
        description: Presentation exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      - name: count
        in: query
        description: Maximum number to retrieve
        schema:
          pattern: ^[1-9][0-9]*$
          type: string
      - name: extra_query
        in: query
        description: (JSON) object mapping referents to extra WQL queries
        schema:
          pattern: ^{\s*".*?"\s*:\s*{.*?}\s*(,\s*".*?"\s*:\s*{.*?}\s*)*\s*}$
          type: string
      - name: referent
        in: query
        description: Proof request referents of interest, comma-separated
        schema:
          type: string
      - name: start
        in: query
        description: Start index
        schema:
          pattern: ^[0-9]*$
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IndyCredPrecis'
  /present-proof/records/{pres_ex_id}/problem-report:
    post:
      tags:
      - present-proof
      summary: Send a problem report for presentation exchange
      parameters:
      - name: pres_ex_id
        in: path
        description: Presentation exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/V10PresentationProblemReportRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresentProofModuleResponse'
      x-codegen-request-body-name: body
  /present-proof/records/{pres_ex_id}/send-presentation:
    post:
      tags:
      - present-proof
      summary: Sends a proof presentation
      parameters:
      - name: pres_ex_id
        in: path
        description: Presentation exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/V10PresentationRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10PresentationExchange'
      x-codegen-request-body-name: body
  /present-proof/records/{pres_ex_id}/send-request:
    post:
      tags:
      - present-proof
      summary: Sends a presentation request in reference to a proposal
      parameters:
      - name: pres_ex_id
        in: path
        description: Presentation exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/AdminAPIMessageTracing'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10PresentationExchange'
      x-codegen-request-body-name: body
  /present-proof/records/{pres_ex_id}/verify-presentation:
    post:
      tags:
      - present-proof
      summary: Verify a received presentation
      parameters:
      - name: pres_ex_id
        in: path
        description: Presentation exchange identifier
        required: true
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10PresentationExchange'
  /present-proof/send-proposal:
    post:
      tags:
      - present-proof
      summary: Sends a presentation proposal
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/V10PresentationProposalRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10PresentationExchange'
      x-codegen-request-body-name: body
  /present-proof/send-request:
    post:
      operationId: send_proof_request
      tags:
      - present-proof
      summary: Sends a free presentation request not bound to any proposal
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/V10PresentationSendRequestRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V10PresentationExchange'
      x-codegen-request-body-name: body
  /revocation/active-registry/{cred_def_id}:
    get:
      tags:
      - revocation
      summary: Get current active revocation registry by credential definition id
      parameters:
      - name: cred_def_id
        in: path
        description: Credential definition identifier
        required: true
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevRegResult'
  /revocation/clear-pending-revocations:
    post:
      tags:
      - revocation
      summary: Clear pending revocations
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ClearPendingRevocationsRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishRevocations'
      x-codegen-request-body-name: body
  /revocation/create-registry:
    post:
      tags:
      - revocation
      summary: Creates a new revocation registry
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/RevRegCreateRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevRegResult'
      x-codegen-request-body-name: body
  /revocation/credential-record:
    get:
      tags:
      - revocation
      summary: Get credential revocation status
      parameters:
      - name: cred_ex_id
        in: query
        description: Credential exchange identifier
        schema:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
      - name: cred_rev_id
        in: query
        description: Credential revocation identifier
        schema:
          pattern: ^[1-9][0-9]*$
          type: string
      - name: rev_reg_id
        in: query
        description: Revocation registry identifier
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredRevRecordResult'
  /revocation/publish-revocations:
    post:
      operationId: publish_revocations
      tags:
      - revocation
      summary: Publish pending revocations to ledger
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/PublishRevocations'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublishRevocations'
      x-codegen-request-body-name: body
  /revocation/registries/created:
    get:
      tags:
      - revocation
      summary: Search for matching revocation registries that current agent created
      parameters:
      - name: cred_def_id
        in: query
        description: Credential definition identifier
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
      - name: state
        in: query
        description: Revocation registry state
        schema:
          type: string
          enum:
          - init
          - generated
          - posted
          - active
          - full
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevRegsCreated'
  /revocation/registry/{rev_reg_id}:
    get:
      tags:
      - revocation
      summary: Get revocation registry by revocation registry id
      parameters:
      - name: rev_reg_id
        in: path
        description: Revocation Registry identifier
        required: true
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevRegResult'
    patch:
      tags:
      - revocation
      summary: Update revocation registry with new public URI to its tails file
      parameters:
      - name: rev_reg_id
        in: path
        description: Revocation Registry identifier
        required: true
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/RevRegUpdateTailsFileUri'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevRegResult'
      x-codegen-request-body-name: body
  /revocation/registry/{rev_reg_id}/definition:
    post:
      tags:
      - revocation
      summary: Send revocation registry definition to ledger
      parameters:
      - name: rev_reg_id
        in: path
        description: Revocation Registry identifier
        required: true
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevRegResult'
  /revocation/registry/{rev_reg_id}/entry:
    post:
      tags:
      - revocation
      summary: Send revocation registry entry to ledger
      parameters:
      - name: rev_reg_id
        in: path
        description: Revocation Registry identifier
        required: true
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevRegResult'
  /revocation/registry/{rev_reg_id}/issued:
    get:
      tags:
      - revocation
      summary: Get number of credentials issued against revocation registry
      parameters:
      - name: rev_reg_id
        in: path
        description: Revocation Registry identifier
        required: true
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevRegIssuedResult'
  /revocation/registry/{rev_reg_id}/set-state:
    patch:
      tags:
      - revocation
      summary: Set revocation registry state manually
      parameters:
      - name: rev_reg_id
        in: path
        description: Revocation Registry identifier
        required: true
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
      - name: state
        in: query
        description: Revocation registry state to set
        required: true
        schema:
          type: string
          enum:
          - init
          - generated
          - posted
          - active
          - full
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevRegResult'
  /revocation/registry/{rev_reg_id}/tails-file:
    get:
      tags:
      - revocation
      summary: Download tails file
      parameters:
      - name: rev_reg_id
        in: path
        description: Revocation Registry identifier
        required: true
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
      responses:
        200:
          description: tails file
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
    put:
      tags:
      - revocation
      summary: Upload local tails file to server
      parameters:
      - name: rev_reg_id
        in: path
        description: Revocation Registry identifier
        required: true
        schema:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevocationModuleResponse'
  /revocation/revoke:
    post:
      operationId: revoke_credential
      tags:
      - revocation
      summary: Revoke an issued credential
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/RevokeRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevocationModuleResponse'
      x-codegen-request-body-name: body
  /schemas:
    post:
      operationId: publish_schema
      tags:
      - schema
      summary: Sends a schema to the ledger
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/SchemaSendRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaSendResults'
      x-codegen-request-body-name: body
  /schemas/created:
    get:
      tags:
      - schema
      summary: Search for matching schema that agent originated
      parameters:
      - name: schema_id
        in: query
        description: Schema identifier
        schema:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
      - name: schema_issuer_did
        in: query
        description: Schema issuer DID
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      - name: schema_name
        in: query
        description: Schema name
        schema:
          type: string
      - name: schema_version
        in: query
        description: Schema version
        schema:
          pattern: ^[0-9.]+$
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemasCreatedResults'
  /schemas/{schema_id}:
    get:
      tags:
      - schema
      summary: Gets a schema from the ledger
      parameters:
      - name: schema_id
        in: path
        description: Schema identifier
        required: true
        schema:
          pattern: ^[1-9][0-9]*|[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaGetResults'
  /shutdown:
    get:
      tags:
      - server
      summary: Shut down server
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminShutdown'
  /status:
    get:
      tags:
      - server
      summary: Fetch the server status
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminStatus'
  /status/live:
    get:
      tags:
      - server
      summary: Liveliness check
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminStatusLiveliness'
  /status/ready:
    get:
      tags:
      - server
      summary: Readiness check
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminStatusReadiness'
  /status/reset:
    post:
      tags:
      - server
      summary: Reset statistics
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminStatus'
  /wallet/did:
    get:
      tags:
      - wallet
      summary: List wallet DIDs
      parameters:
      - name: did
        in: query
        description: DID of interest
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      - name: posture
        in: query
        description: Whether DID is current public DID, posted to ledger but current
          public DID, or local to the wallet
        schema:
          type: string
          enum:
          - public
          - posted
          - wallet_only
      - name: verkey
        in: query
        description: Verification key of interest
        schema:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DIDList'
  /wallet/did/create:
    post:
      operationId: create_did
      tags:
      - wallet
      summary: Create a local DID
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DIDResult'
  /wallet/did/local/rotate-keypair:
    patch:
      tags:
      - wallet
      summary: Rotate keypair for a DID not posted to the ledger
      parameters:
      - name: did
        in: query
        description: DID of interest
        required: true
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletModuleResponse'
  /wallet/did/public:
    get:
      tags:
      - wallet
      summary: Fetch the current public DID
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DIDResult'
    post:
      operationId: set_public_did
      tags:
      - wallet
      summary: Assign the current public DID
      parameters:
      - name: did
        in: query
        description: DID of interest
        required: true
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DIDResult'
  /wallet/get-did-endpoint:
    get:
      tags:
      - wallet
      summary: Query DID endpoint in wallet
      parameters:
      - name: did
        in: query
        description: DID of interest
        required: true
        schema:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DIDEndpoint'
  /wallet/set-did-endpoint:
    post:
      tags:
      - wallet
      summary: Update endpoint in wallet and on ledger if posted to it
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/DIDEndpointWithType'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletModuleResponse'
      x-codegen-request-body-name: body
components:
  schemas:
    AMLRecord:
      type: object
      properties:
        aml:
          type: object
          additionalProperties:
            type: string
        amlContext:
          type: string
        version:
          type: string
    ActionMenuModulesResult:
      type: object
    AdminAPIMessageTracing:
      type: object
      properties:
        trace:
          type: boolean
          description: Record trace information, based on agent configuration
    AdminMediationDeny:
      type: object
      properties:
        mediator_terms:
          type: array
          description: List of mediator rules for recipient
          items:
            type: string
            description: Indicate terms that the mediator requires the recipient to
              agree to
        recipient_terms:
          type: array
          description: List of recipient rules for mediation
          items:
            type: string
            description: Indicate terms that the recipient requires the mediator to
              agree to
    AdminModules:
      type: object
      properties:
        result:
          type: array
          description: List of admin modules
          items:
            type: string
            description: admin module
    AdminShutdown:
      type: object
    AdminStatus:
      type: object
    AdminStatusLiveliness:
      type: object
      properties:
        alive:
          type: boolean
          description: Liveliness status
          example: true
    AdminStatusReadiness:
      type: object
      properties:
        ready:
          type: boolean
          description: Readiness status
          example: true
    AttachDecorator:
      required:
      - data
      type: object
      properties:
        '@id':
          type: string
          description: Attachment identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        byte_count:
          type: integer
          description: Byte count of data included by reference
          format: int32
          example: 1234
        data:
          $ref: '#/components/schemas/AttachDecoratorData'
        description:
          type: string
          description: Human-readable description of content
          example: view from doorway, facing east, with lights off
        filename:
          type: string
          description: File name
          example: IMG1092348.png
        lastmod_time:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Hint regarding last modification datetime, in ISO-8601 format
          example: 2021-05-11 13:20:48Z
        mime-type:
          type: string
          description: MIME type
          example: image/png
    AttachDecoratorData:
      type: object
      properties:
        base64:
          pattern: ^[a-zA-Z0-9+/]*={0,2}$
          type: string
          description: Base64-encoded data
          example: ey4uLn0=
        json:
          type: object
          properties: {}
          description: JSON-serialized data
          example: '{"sample": "content"}'
        jws:
          type: object
          description: Detached Java Web Signature
          allOf:
          - $ref: '#/definitions/AttachDecoratorDataJWS'
        links:
          type: array
          description: List of hypertext links to data
          items:
            type: string
            example: https://link.to/data
        sha256:
          pattern: ^[a-fA-F0-9+/]{64}$
          type: string
          description: SHA256 hash (binhex encoded) of content
          example: 617a48c7c8afe0521efdc03e5bb0ad9e655893e6b4b51f0e794d70fba132aacb
    AttachDecoratorData1JWS:
      required:
      - header
      - signature
      type: object
      properties:
        header:
          $ref: '#/components/schemas/AttachDecoratorDataJWSHeader'
        protected:
          pattern: ^[-_a-zA-Z0-9]*$
          type: string
          description: protected JWS header
          example: ey4uLn0
        signature:
          pattern: ^[-_a-zA-Z0-9]*$
          type: string
          description: signature
          example: ey4uLn0
    AttachDecoratorDataJWS:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/AttachDecoratorDataJWSHeader'
        protected:
          pattern: ^[-_a-zA-Z0-9]*$
          type: string
          description: protected JWS header
          example: ey4uLn0
        signature:
          pattern: ^[-_a-zA-Z0-9]*$
          type: string
          description: signature
          example: ey4uLn0
        signatures:
          type: array
          description: List of signatures
          items:
            $ref: '#/components/schemas/AttachDecoratorData1JWS'
    AttachDecoratorDataJWSHeader:
      required:
      - kid
      type: object
      properties:
        kid:
          pattern: ^did:(?:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+|sov:[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}(;.*)?(\?.*)?#.+)$
          type: string
          description: Key identifier, in W3C did:key or DID URL format
          example: did:sov:LjgpST2rjsoxYegQDRm7EL#keys-4
    AttachmentDef:
      type: object
      properties:
        id:
          type: string
          description: Attachment identifier
          example: attachment-0
        type:
          type: string
          description: Attachment type
          example: present-proof
          enum:
          - credential-offer
          - present-proof
    AttributeMimeTypesResult:
      type: object
    BasicMessageModuleResponse:
      type: object
    ClearPendingRevocationsRequest:
      type: object
      properties:
        purge:
          type: object
          additionalProperties:
            type: array
            items:
              pattern: ^[1-9][0-9]*$
              type: string
              description: Credential revocation identifier
              example: "12345"
          description: 'Credential revocation ids by revocation registry id: omit
            for all, specify null or empty list for all pending per revocation registry'
    ConnRecord:
      required:
        - connection_id
        - state
      type: object
      properties:
        accept:
          type: string
          description: 'Connection acceptance: manual or auto'
          example: auto
          enum:
          - manual
          - auto
        alias:
          type: string
          description: Optional alias to apply to connection for later use
          example: Bob, providing quotes
        connection_id:
          type: string
          description: Connection identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-05-11 13:20:48Z
        error_msg:
          type: string
          description: Error message
          example: No DIDDoc provided; cannot connect to public DID
        inbound_connection_id:
          type: string
          description: Inbound routing connection id to use
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        invitation_key:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
          type: string
          description: Public key for connection
          example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        invitation_mode:
          type: string
          description: Invitation mode
          example: once
          enum:
          - once
          - multi
          - static
        invitation_msg_id:
          type: string
          description: ID of out-of-band invitation message
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        my_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Our DID for connection
          example: WgWxqztrNooG92RXvxSTWv
        request_id:
          type: string
          description: Connection request identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        rfc23_state:
          type: string
          description: State per RFC 23
          readOnly: true
          example: invitation-sent
        routing_state:
          type: string
          description: Routing state of connection
          example: active
          enum:
          - none
          - request
          - active
          - error
        state:
          type: string
          description: Current record state
          example: active
        their_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Their DID for connection
          example: WgWxqztrNooG92RXvxSTWv
        their_label:
          type: string
          description: Their label for connection
          example: Bob
        their_public_did:
          type: string
          description: Other agent's public DID for connection
          example: 2cpBmR3FqGKWi5EyUbpRY8
        their_role:
          type: string
          description: Their role in the connection protocol
          example: requester
          enum:
          - invitee
          - requester
          - inviter
          - responder
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-05-11 13:20:48Z
    ConnectionInvitation:
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: DID for connection invitation
          example: WgWxqztrNooG92RXvxSTWv
        imageUrl:
          type: string
          description: Optional image URL for connection invitation
          format: url
          nullable: true
          example: http://192.168.56.101/img/logo.jpg
        label:
          type: string
          description: Optional label for connection
          example: Bob
        recipientKeys:
          type: array
          description: List of recipient keys
          items:
            pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
            type: string
            description: Recipient public key
            example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        routingKeys:
          type: array
          description: List of routing keys
          items:
            pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
            type: string
            description: Routing key
            example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        serviceEndpoint:
          type: string
          description: Service endpoint at which to reach this agent
          example: http://192.168.56.101:8020
    ConnectionList:
      required:
        - results
      type: object
      properties:
        results:
          type: array
          description: List of connection records
          items:
            $ref: '#/components/schemas/ConnRecord'
    ConnectionMetadata:
      type: object
      properties:
        results:
          type: object
          properties: {}
          description: Dictionary of metadata associated with connection.
    ConnectionMetadataSetRequest:
      required:
      - metadata
      type: object
      properties:
        metadata:
          type: object
          properties: {}
          description: Dictionary of metadata to set for connection.
    ConnectionModuleResponse:
      type: object
    ConnectionStaticRequest:
      type: object
      properties:
        alias:
          type: string
          description: Alias to assign to this connection
        my_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Local DID
          example: WgWxqztrNooG92RXvxSTWv
        my_seed:
          type: string
          description: Seed to use for the local DID
        their_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Remote DID
          example: WgWxqztrNooG92RXvxSTWv
        their_endpoint:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
          description: URL endpoint for other party
          example: https://myhost:8021
        their_label:
          type: string
          description: Other party's label for this connection
        their_seed:
          type: string
          description: Seed to use for the remote DID
        their_verkey:
          type: string
          description: Remote verification key
    ConnectionStaticResult:
      required:
      - my_verkey
      - my_did
      - my_endpoint
      - record
      - their_did
      - their_verkey
      type: object
      properties:
        my_verkey:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
          type: string
          description: My verification key
          example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        my_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Local DID
          example: WgWxqztrNooG92RXvxSTWv
        my_endpoint:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
          description: My URL endpoint
          example: https://myhost:8021
        record:
          $ref: '#/components/schemas/ConnRecord'
        their_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Remote DID
          example: WgWxqztrNooG92RXvxSTWv
        their_verkey:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
          type: string
          description: Remote verification key
          example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
    CreateInvitationRequest:
      type: object
      properties:
        mediation_id:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
          description: Identifier for active mediation record to be used
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        metadata:
          type: object
          properties: {}
          description: Optional metadata to attach to the connection created with
            the invitation
        recipient_keys:
          type: array
          description: List of recipient keys
          items:
            pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
            type: string
            description: Recipient public key
            example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        routing_keys:
          type: array
          description: List of routing keys
          items:
            pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
            type: string
            description: Routing key
            example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        service_endpoint:
          type: string
          description: Connection endpoint
          example: http://192.168.56.102:8020
    CredAttrSpec:
      required:
      - name
      - value
      type: object
      properties:
        mime-type:
          type: string
          description: 'MIME type: omit for (null) default'
          nullable: true
          example: image/jpeg
        name:
          type: string
          description: Attribute name
          example: favourite_drink
        value:
          type: string
          description: 'Attribute value: base64-encode if MIME type is present'
          example: martini
    CredBrief:
      type: object
      properties:
        attrs:
          type: object
          additionalProperties:
            type: string
            description: Attribute value
          description: Attribute names mapped to their raw values
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        cred_rev_id:
          pattern: ^[1-9][0-9]*$
          type: string
          description: Credential revocation identifier
          example: "12345"
        referent:
          type: string
          description: Credential referent
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        rev_reg_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
          description: Revocation registry identifier
          example: WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
        schema_id:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
          description: Schema identifier
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
    CredBriefList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CredBrief'
    CredRevRecordResult:
      type: object
    CredRevokedResult:
      type: object
      properties:
        revoked:
          type: boolean
          description: Whether credential is revoked on the ledger
    CredentialDefinition:
      type: object
      properties:
        id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        schemaId:
          type: string
          description: Schema identifier within credential definition identifier
          example: "20"
        tag:
          type: string
          description: Tag within credential definition identifier
          example: tag
        type:
          type: object
          description: 'Signature type: CL for Camenisch-Lysyanskaya'
          example: CL
        value:
          type: object
          properties: {}
          description: Credential definition primary and revocation values
        ver:
          pattern: ^[0-9.]+$
          type: string
          description: Node protocol version
          example: "1.0"
    CredentialDefinitionGetResults:
      type: object
      properties:
        credential_definition:
          $ref: '#/components/schemas/CredentialDefinition'
    CredentialDefinitionSendRequest:
      type: object
      properties:
        revocation_registry_size:
          maximum: 32768
          minimum: 4
          type: integer
          description: Revocation registry size
          format: int32
          example: 1000
        schema_id:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
          description: Schema identifier
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        support_revocation:
          type: boolean
          description: Revocation supported flag
        tag:
          type: string
          description: Credential definition identifier tag
          example: default
    CredentialDefinitionSendResults:
      type: object
      properties:
        credential_definition_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
    CredentialDefinitionsCreatedResults:
      type: object
      properties:
        credential_definition_ids:
          type: array
          items:
            pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
            type: string
            description: Credential definition identifiers
            example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
    CredentialPreview:
      required:
      - attributes
      type: object
      properties:
        '@type':
          type: string
          description: Message type identifier
          example: issue-credential/1.0/credential-preview
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/CredAttrSpec'
    DID:
      type: object
      required:
        - did
        - posture
        - verkey
      properties:
        did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: DID of interest
          example: WgWxqztrNooG92RXvxSTWv
        posture:
          type: string
          description: Whether DID is current public DID, posted to ledger but not
            current public DID, or local to the wallet
          example: wallet_only
          enum:
          - public
          - posted
          - wallet_only
        verkey:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
          type: string
          description: Public verification key
          example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
    DIDEndpoint:
      required:
      - did
      type: object
      properties:
        did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: DID of interest
          example: WgWxqztrNooG92RXvxSTWv
        endpoint:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
          description: Endpoint to set (omit to delete)
          example: https://myhost:8021
    DIDEndpointWithType:
      required:
      - did
      type: object
      properties:
        did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: DID of interest
          example: WgWxqztrNooG92RXvxSTWv
        endpoint:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
          description: Endpoint to set (omit to delete)
          example: https://myhost:8021
        endpoint_type:
          type: string
          description: Endpoint type to set (default 'Endpoint'); affects only public
            or posted DIDs
          example: Endpoint
          enum:
          - Endpoint
          - Profile
          - LinkedDomains
    DIDList:
      type: object
      properties:
        results:
          type: array
          description: DID list
          items:
            $ref: '#/components/schemas/DID'
    DIDResult:
      type: object
      required:
        - result
      properties:
        result:
          $ref: '#/components/schemas/DID'
    DIDXRequest:
      required:
      - label
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: DID of exchange
          example: WgWxqztrNooG92RXvxSTWv
        did_doc~attach:
          type: object
          description: As signed attachment, DID Doc associated with DID
          allOf:
          - $ref: '#/definitions/AttachDecorator'
        label:
          type: string
          description: Label for DID exchange request
          example: Request to connect with Bob
    EndpointsResult:
      type: object
      properties:
        my_endpoint:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
          description: My endpoint
          example: https://myhost:8021
        their_endpoint:
          pattern: ^[A-Za-z0-9\.\-\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$
          type: string
          description: Their endpoint
          example: https://myhost:8021
    HolderModuleResponse:
      type: object
    IndyCredInfo:
      type: object
      properties:
        attrs:
          type: object
          additionalProperties:
            type: string
            example: "24"
          description: Attribute names and value
        referent:
          type: string
          description: Wallet referent
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
    IndyCredPrecis:
      type: object
      properties:
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        cred_info:
          type: object
          description: Credential info
          allOf:
          - $ref: '#/definitions/IndyCredInfo'
        cred_rev:
          pattern: ^[1-9][0-9]*$
          type: string
          description: Credential revocation identifier
          example: "12345"
        interval:
          type: object
          description: Non-revocation interval from presentation request
          allOf:
          - $ref: '#/definitions/IndyProofReqNonRevoked'
        presentation_referents:
          type: array
          items:
            type: string
            description: presentation referent
            example: 1_age_uuid
        rev_reg_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
          description: Revocation registry identifier
          example: WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
        schema_id:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
          description: Schema identifier
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
    IndyProofReqAttrSpec:
      type: object
      properties:
        name:
          type: string
          description: Attribute name
          example: favouriteDrink
        names:
          type: array
          description: Attribute name group
          items:
            type: string
            example: age
        non_revoked:
          $ref: '#/components/schemas/IndyProofReqNonRevoked'
        restrictions:
          type: array
          description: 'If present, credential must satisfy one of given restrictions:
            specify schema_id, schema_issuer_did, schema_name, schema_version, issuer_did,
            cred_def_id, and/or attr::<attribute-name>::value where <attribute-name>
            represents a credential attribute name'
          items:
            type: object
            additionalProperties:
              type: string
              example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
    IndyProofReqNonRevoked:
      required:
      - to
      type: object
      properties:
        to:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
          description: Timestamp of interest for non-revocation proof
          format: int32
          example: 1620739248
    IndyProofReqPredSpec:
      required:
      - name
      - p_type
      - p_value
      type: object
      properties:
        name:
          type: string
          description: Attribute name
          example: index
        non_revoked:
          $ref: '#/components/schemas/IndyProofReqNonRevoked'
        p_type:
          type: string
          description: Predicate type ('<', '<=', '>=', or '>')
          example: '>='
          enum:
          - <
          - <=
          - '>='
          - '>'
        p_value:
          type: integer
          description: Threshold value
          format: int32
        restrictions:
          type: array
          description: If present, credential must satisfy one of given restrictions
          items:
            $ref: '#/components/schemas/IndyProofReqPredSpecRestrictions'
    IndyProofReqPredSpecRestrictions:
      type: object
      properties:
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        issuer_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Credential issuer DID
          example: WgWxqztrNooG92RXvxSTWv
        schema_id:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
          description: Schema identifier
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        schema_issuer_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Schema issuer (origin) DID
          example: WgWxqztrNooG92RXvxSTWv
        schema_name:
          type: string
          description: Schema name
          example: transcript
        schema_version:
          pattern: ^[0-9.]+$
          type: string
          description: Schema version
          example: "1.0"
    IndyProofRequest:
      required:
      - requested_attributes
      - requested_predicates
      - name
      - version
      type: object
      properties:
        name:
          type: string
          description: Proof request name
          example: Proof request
        non_revoked:
          $ref: '#/components/schemas/IndyProofReqNonRevoked'
        nonce:
          type: string
          description: Nonce
          example: "1234567890"
        requested_attributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IndyProofReqAttrSpec'
          description: Requested attribute specifications of proof request
        requested_predicates:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IndyProofReqPredSpec'
          description: Requested predicate specifications of proof request
        version:
          pattern: ^[0-9.]+$
          type: string
          description: Proof request version
          example: "1.0"
    IndyRequestedCredsRequestedAttr:
      required:
      - cred_id
      type: object
      properties:
        cred_id:
          type: string
          description: Wallet credential identifier (typically but not necessarily
            a UUID)
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        revealed:
          type: boolean
          description: Whether to reveal attribute in proof (default true)
    IndyRequestedCredsRequestedPred:
      required:
      - cred_id
      type: object
      properties:
        cred_id:
          type: string
          description: Wallet credential identifier (typically but not necessarily
            a UUID)
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        timestamp:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
          description: Epoch timestamp of interest for non-revocation proof
          format: int32
          example: 1620739248
    IntroModuleResponse:
      type: object
    InvitationCreateRequest:
      type: object
      properties:
        alias:
          type: string
          description: Alias for connection
          example: Barry
        attachments:
          type: array
          description: Optional invitation attachments
          items:
            $ref: '#/components/schemas/AttachmentDef'
        handshake_protocols:
          type: array
          items:
            type: string
            description: Handshake protocol to specify in invitation
            example: https://github.com/hyperledger/aries-toolbox/tree/master/docs/didexchange/1.0
        mediation_id:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
          description: Identifier for active mediation record to be used
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        metadata:
          type: object
          properties: {}
          description: Optional metadata to attach to the connection created with
            the invitation
        my_label:
          type: string
          description: Label for connection invitation
          example: Invitation to Barry
        use_public_did:
          type: boolean
          description: Whether to use public DID in invitation
          example: false
    InvitationReceiveRequest:
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        handshake_protocols:
          type: array
          items:
            type: string
            description: Handshake protocol
            example: https://github.com/hyperledger/aries-toolbox/tree/master/docs/didexchange/1.0
        label:
          type: string
          description: Optional label
          example: Bob
        request~attach:
          type: array
          description: Optional request attachment
          items:
            $ref: '#/components/schemas/AttachDecorator'
        service:
          type: object
        service_blocks:
          type: array
          items:
            $ref: '#/components/schemas/Service'
        service_dids:
          type: array
          items:
            pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
            type: string
            description: Service DID
            example: WgWxqztrNooG92RXvxSTWv
    InvitationRecord:
      type: object
      properties:
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-05-11 13:20:48Z
        invi_msg_id:
          type: string
          description: Invitation message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        invitation:
          type: object
          properties: {}
          description: Out of band invitation object
        invitation_id:
          type: string
          description: Invitation record identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        invitation_url:
          type: string
          description: Invitation message URL
          example: https://example.com/endpoint?c_i=eyJAdHlwZSI6ICIuLi4iLCAiLi4uIjogIi4uLiJ9XX0=
        state:
          type: string
          description: Out of band message exchange state
          example: await_response
        trace:
          type: boolean
          description: Record trace information, based on agent configuration
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-05-11 13:20:48Z
    InvitationResult:
      type: object
      required:
        - connection_id
        - invitation
        - invitation_url
      properties:
        connection_id:
          type: string
          description: Connection identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        invitation:
          $ref: '#/components/schemas/ConnectionInvitation'
        invitation_url:
          type: string
          description: Invitation URL
          example: http://192.168.56.101:8020/invite?c_i=eyJAdHlwZSI6Li4ufQ==
    IssueCredentialModuleResponse:
      type: object
    Keylist:
      type: object
      properties:
        results:
          type: array
          description: List of keylist records
          items:
            $ref: '#/components/schemas/RouteRecord'
    KeylistQuery:
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        filter:
          type: object
          properties: {}
          description: Query dictionary object
          example:
            filter: {}
        paginate:
          type: object
          description: Pagination info
          allOf:
          - $ref: '#/definitions/KeylistQueryPaginate'
    KeylistQueryFilterRequest:
      type: object
      properties:
        filter:
          type: object
          properties: {}
          description: Filter for keylist query.
    KeylistQueryPaginate:
      type: object
      properties:
        limit:
          type: integer
          description: Limit for keylist query
          format: int32
          example: 30
        offset:
          type: integer
          description: Offset value for query
          format: int32
          example: 0
    KeylistUpdate:
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        updates:
          type: array
          description: List of update rules
          items:
            $ref: '#/components/schemas/KeylistUpdateRule'
    KeylistUpdateRequest:
      type: object
      properties:
        updates:
          type: array
          items:
            $ref: '#/components/schemas/KeylistUpdateRule'
    KeylistUpdateRule:
      required:
      - action
      - recipient_key
      type: object
      properties:
        action:
          type: string
          description: Action for specific key
          example: add
          enum:
          - add
          - remove
        recipient_key:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
          type: string
          description: Key to remove or add
          example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
    LedgerModulesResult:
      type: object
    MediationCreateRequest:
      type: object
      properties:
        mediator_terms:
          type: array
          description: List of mediator rules for recipient
          items:
            type: string
            description: Indicate terms that the mediator requires the recipient to
              agree to
        recipient_terms:
          type: array
          description: List of recipient rules for mediation
          items:
            type: string
            description: Indicate terms that the recipient requires the mediator to
              agree to
    MediationDeny:
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        mediator_terms:
          type: array
          items:
            type: string
            description: Terms for mediator to agree
        recipient_terms:
          type: array
          items:
            type: string
            description: Terms for recipient to agree
    MediationGrant:
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        endpoint:
          type: string
          description: endpoint on which messages destined for the recipient are received.
          example: http://192.168.56.102:8020/
        routing_keys:
          type: array
          items:
            type: string
            description: Keys to use for forward message packaging
    MediationList:
      type: object
      properties:
        results:
          type: array
          description: List of mediation records
          items:
            $ref: '#/components/schemas/MediationRecord'
    MediationRecord:
      required:
      - connection_id
      - role
      type: object
      properties:
        connection_id:
          type: string
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-05-11 13:20:48Z
        endpoint:
          type: string
        mediation_id:
          type: string
        mediator_terms:
          type: array
          items:
            type: string
        recipient_terms:
          type: array
          items:
            type: string
        role:
          type: string
        routing_keys:
          type: array
          items:
            pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
            type: string
            example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        state:
          type: string
          description: Current record state
          example: active
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-05-11 13:20:48Z
    MenuForm:
      type: object
      properties:
        description:
          type: string
          description: Additional descriptive text for menu form
          example: Window preference settings
        params:
          type: array
          description: List of form parameters
          items:
            $ref: '#/components/schemas/MenuFormParam'
        submit-label:
          type: string
          description: Alternative label for form submit button
          example: Send
        title:
          type: string
          description: Menu form title
          example: Preferences
    MenuFormParam:
      required:
      - name
      - title
      type: object
      properties:
        default:
          type: string
          description: Default parameter value
          example: "0"
        description:
          type: string
          description: Additional descriptive text for menu form parameter
          example: Delay in seconds before starting
        name:
          type: string
          description: Menu parameter name
          example: delay
        required:
          type: boolean
          description: Whether parameter is required
          example: false
        title:
          type: string
          description: Menu parameter title
          example: Delay in seconds
        type:
          type: string
          description: Menu form parameter input type
          example: int
    MenuJson:
      required:
      - options
      type: object
      properties:
        description:
          type: string
          description: Introductory text for the menu
          example: User preferences for window settings
        errormsg:
          type: string
          description: Optional error message to display in menu header
          example: 'Error: item not present'
        options:
          type: array
          description: List of menu options
          items:
            $ref: '#/components/schemas/MenuOption'
        title:
          type: string
          description: Menu title
          example: My Menu
    MenuOption:
      required:
      - name
      - title
      type: object
      properties:
        description:
          type: string
          description: Additional descriptive text for menu option
          example: Window display preferences
        disabled:
          type: boolean
          description: Whether to show option as disabled
          example: false
        form:
          $ref: '#/components/schemas/MenuForm'
        name:
          type: string
          description: Menu option name (unique identifier)
          example: window_prefs
        title:
          type: string
          description: Menu option title
          example: Window Preferences
    PerformRequest:
      type: object
      properties:
        name:
          type: string
          description: Menu option name
          example: Query
        params:
          type: object
          additionalProperties:
            type: string
            example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          description: Input parameter values
    PingRequest:
      type: object
      properties:
        comment:
          type: string
          description: Comment for the ping message
          nullable: true
    PingRequestResponse:
      type: object
      properties:
        thread_id:
          type: string
          description: Thread ID of the ping message
    PresAttrSpec:
      required:
      - name
      type: object
      properties:
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        mime-type:
          type: string
          description: MIME type (default null)
          example: image/jpeg
        name:
          type: string
          description: Attribute name
          example: favourite_drink
        referent:
          type: string
          description: Credential referent
          example: "0"
        value:
          type: string
          description: Attribute value
          example: martini
    PresPredSpec:
      required:
      - name
      - predicate
      - threshold
      type: object
      properties:
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        name:
          type: string
          description: Attribute name
          example: high_score
        predicate:
          type: string
          description: Predicate type ('<', '<=', '>=', or '>')
          example: '>='
          enum:
          - <
          - <=
          - '>='
          - '>'
        threshold:
          type: integer
          description: Threshold value
          format: int32
    PresentProofModuleResponse:
      type: object
    PresentationPreview:
      required:
      - attributes
      - predicates
      type: object
      properties:
        '@type':
          type: string
          description: Message type identifier
          example: https://github.com/hyperledger/aries-toolbox/tree/master/docs/present-proof/1.0/presentation-preview
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/PresAttrSpec'
        predicates:
          type: array
          items:
            $ref: '#/components/schemas/PresPredSpec'
    PublishRevocations:
      type: object
      properties:
        rrid2crid:
          type: object
          additionalProperties:
            type: array
            items:
              pattern: ^[1-9][0-9]*$
              type: string
              description: Credential revocation identifier
              example: "12345"
          description: Credential revocation ids by revocation registry id
    QueryResult:
      type: object
      properties:
        results:
          type: object
          additionalProperties:
            type: object
            properties: {}
            description: Protocol descriptor
          description: Query results keyed by protocol
    ReceiveInvitationRequest:
      type: object
      properties:
        '@id':
          type: string
          description: Message identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        '@type':
          type: string
          description: Message type
          readOnly: true
          example: https://didcomm.org/my-family/1.0/my-message-type
        did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: DID for connection invitation
          example: WgWxqztrNooG92RXvxSTWv
        imageUrl:
          type: string
          description: Optional image URL for connection invitation
          format: url
          nullable: true
          example: http://192.168.56.101/img/logo.jpg
        label:
          type: string
          description: Optional label for connection
          example: Bob
        recipientKeys:
          type: array
          description: List of recipient keys
          items:
            pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
            type: string
            description: Recipient public key
            example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        routingKeys:
          type: array
          description: List of routing keys
          items:
            pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$
            type: string
            description: Routing key
            example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        serviceEndpoint:
          type: string
          description: Service endpoint at which to reach this agent
          example: http://192.168.56.101:8020
    RevRegCreateRequest:
      type: object
      properties:
        credential_definition_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        max_cred_num:
          maximum: 32768
          minimum: 4
          type: integer
          description: Revocation registry size
          format: int32
          example: 1000
    RevRegIssuedResult:
      type: object
      properties:
        result:
          minimum: 0
          type: integer
          description: Number of credentials issued against revocation registry
          format: int32
          example: 0
    RevRegResult:
      type: object
    RevRegUpdateTailsFileUri:
      required:
      - tails_public_uri
      type: object
      properties:
        tails_public_uri:
          type: string
          description: Public URI to the tails file
          format: url
          example: http://192.168.56.133:6543/revocation/registry/WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0/tails-file
    RevRegsCreated:
      type: object
      properties:
        rev_reg_ids:
          type: array
          items:
            pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
            type: string
            description: Revocation registry identifiers
            example: WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
    RevocationModuleResponse:
      type: object
    RevokeRequest:
      type: object
      properties:
        cred_ex_id:
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
          type: string
          description: Credential exchange identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        cred_rev_id:
          pattern: ^[1-9][0-9]*$
          type: string
          description: Credential revocation identifier
          example: "12345"
        publish:
          type: boolean
          description: (True) publish revocation to ledger immediately, or (default,
            False) mark it pending
        rev_reg_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
          description: Revocation registry identifier
          example: WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
    RouteRecord:
      required:
      - recipient_key
      type: object
      properties:
        connection_id:
          type: string
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-05-11 13:20:48Z
        recipient_key:
          type: string
        record_id:
          type: string
        role:
          type: string
        state:
          type: string
          description: Current record state
          example: active
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-05-11 13:20:48Z
        wallet_id:
          type: string
    Schema:
      type: object
      properties:
        attrNames:
          type: array
          description: Schema attribute names
          items:
            type: string
            description: Attribute name
            example: score
        id:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
          description: Schema identifier
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        name:
          type: string
          description: Schema name
          example: schema_name
        seqNo:
          minimum: 1
          type: integer
          description: Schema sequence number
          format: int32
          example: 10
        ver:
          pattern: ^[0-9.]+$
          type: string
          description: Node protocol version
          example: "1.0"
        version:
          pattern: ^[0-9.]+$
          type: string
          description: Schema version
          example: "1.0"
    SchemaGetResults:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/Schema'
    SchemaSendRequest:
      required:
      - attributes
      - schema_name
      - schema_version
      type: object
      properties:
        attributes:
          type: array
          description: List of schema attributes
          items:
            type: string
            description: attribute name
            example: score
        schema_name:
          type: string
          description: Schema name
          example: prefs
        schema_version:
          pattern: ^[0-9.]+$
          type: string
          description: Schema version
          example: "1.0"
    SchemaSendResults:
      required:
      - sent
      type: object
      properties:
        sent:
          $ref: '#/components/schemas/SchemaSent'
        txn:
          type: object
          properties: {}
          description: Schema transaction
    SchemaSent:
      type: object
      required:
      - schema
      - schema_id
      properties:
        schema:
          type: object
          properties: {}
          description: schema
        schema_id:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
          description: Schema identifier
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
    SchemasCreatedResults:
      type: object
      properties:
        schema_ids:
          type: array
          items:
            pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
            type: string
            description: Schema identifiers
            example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
    SendMenu:
      required:
      - menu
      type: object
      properties:
        menu:
          type: object
          description: Menu to send to connection
          allOf:
          - $ref: '#/definitions/MenuJson'
    SendMessage:
      type: object
      properties:
        content:
          type: string
          description: Message content
          example: Hello
    Service:
      required:
      - id
      - type
      type: object
      properties:
        did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Service DID
          example: WgWxqztrNooG92RXvxSTWv
        id:
          type: string
          description: Service identifier
        recipientKeys:
          type: array
          description: List of recipient keys
          items:
            pattern: ^did:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$
            type: string
            description: Recipient public key
            example: did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
        routingKeys:
          type: array
          description: List of routing keys
          items:
            pattern: ^did:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$
            type: string
            description: Routing key
            example: did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
        serviceEndpoint:
          type: string
          description: Service endpoint at which to reach this agent
          example: http://192.168.56.101:8020
        type:
          type: string
          description: Service type
    TAAAccept:
      type: object
      properties:
        mechanism:
          type: string
        text:
          type: string
        version:
          type: string
    TAAAcceptance:
      type: object
      nullable: true
      properties:
        mechanism:
          type: string
        time:
          maximum: 18446744073709551615
          minimum: 0
          type: integer
          format: int32
          example: 1620739248
    TAAInfo:
      type: object
      required:
        - aml_record
        - taa_accepted
        - taa_record
        - taa_required
      properties:
        aml_record:
          $ref: '#/components/schemas/AMLRecord'
        taa_accepted:
          $ref: '#/components/schemas/TAAAcceptance'
        taa_record:
          $ref: '#/components/schemas/TAARecord'
        taa_required:
          type: boolean
    TAARecord:
      type: object
      required:
        - digest
        - text
        - version
      properties:
        digest:
          type: string
        text:
          type: string
        version:
          type: string
    TAAResult:
      type: object
      required:
        - result
      properties:
        result:
          $ref: '#/components/schemas/TAAInfo'
    V10CredentialCreate:
      required:
      - credential_proposal
      type: object
      properties:
        auto_remove:
          type: boolean
          description: Whether to remove the credential exchange record on completion
            (overrides --preserve-exchange-records configuration setting)
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        credential_proposal:
          $ref: '#/components/schemas/CredentialPreview'
        issuer_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Credential issuer DID
          example: WgWxqztrNooG92RXvxSTWv
        schema_id:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
          description: Schema identifier
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        schema_issuer_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Schema issuer DID
          example: WgWxqztrNooG92RXvxSTWv
        schema_name:
          type: string
          description: Schema name
          example: preferences
        schema_version:
          pattern: ^[0-9.]+$
          type: string
          description: Schema version
          example: "1.0"
        trace:
          type: boolean
          description: Whether to trace event (default false)
          example: false
    V10CredentialExchange:
      type: object
      properties:
        auto_issue:
          type: boolean
          description: Issuer choice to issue to request in this credential exchange
          example: false
        auto_offer:
          type: boolean
          description: Holder choice to accept offer in this credential exchange
          example: false
        auto_remove:
          type: boolean
          description: Issuer choice to remove this credential exchange record when
            complete
          example: false
        connection_id:
          type: string
          description: Connection identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-05-11 13:20:48Z
        credential:
          type: object
          properties: {}
          description: Credential as stored
        credential_definition_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        credential_exchange_id:
          type: string
          description: Credential exchange identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        credential_id:
          type: string
          description: Credential identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        credential_offer:
          type: object
          properties: {}
          description: (Indy) credential offer
        credential_offer_dict:
          type: object
          properties: {}
          description: Serialized credential offer message
        credential_proposal_dict:
          type: object
          properties: {}
          description: Serialized credential proposal message
        credential_request:
          type: object
          properties: {}
          description: (Indy) credential request
        credential_request_metadata:
          type: object
          properties: {}
          description: (Indy) credential request metadata
        error_msg:
          type: string
          description: Error message
          example: credential definition identifier is not set in proposal
        initiator:
          type: string
          description: 'Issue-credential exchange initiator: self or external'
          example: self
          enum:
          - self
          - external
        parent_thread_id:
          type: string
          description: Parent thread identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        raw_credential:
          type: object
          properties: {}
          description: Credential as received, prior to storage in holder wallet
        revoc_reg_id:
          type: string
          description: Revocation registry identifier
        revocation_id:
          type: string
          description: Credential identifier within revocation registry
        role:
          type: string
          description: 'Issue-credential exchange role: holder or issuer'
          example: issuer
          enum:
          - holder
          - issuer
        schema_id:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
          description: Schema identifier
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        state:
          type: string
          description: Issue-credential exchange state
          example: credential_acked
        thread_id:
          type: string
          description: Thread identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        trace:
          type: boolean
          description: Record trace information, based on agent configuration
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-05-11 13:20:48Z
    V10CredentialExchangeListResult:
      type: object
      properties:
        results:
          type: array
          description: Aries#0036 v1.0 credential exchange records
          items:
            $ref: '#/components/schemas/V10CredentialExchange'
    V10CredentialIssueRequest:
      type: object
      properties:
        comment:
          type: string
          description: Human-readable comment
          nullable: true
    V10CredentialOfferRequest:
      required:
      - connection_id
      - cred_def_id
      - credential_preview
      type: object
      properties:
        auto_issue:
          type: boolean
          description: Whether to respond automatically to credential requests, creating
            and issuing requested credentials
        auto_remove:
          type: boolean
          description: Whether to remove the credential exchange record on completion
            (overrides --preserve-exchange-records configuration setting)
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        connection_id:
          type: string
          description: Connection identifier
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        credential_preview:
          $ref: '#/components/schemas/CredentialPreview'
        trace:
          type: boolean
          description: Whether to trace event (default false)
          example: false
    V10CredentialProblemReportRequest:
      required:
      - explain_ltxt
      type: object
      properties:
        explain_ltxt:
          type: string
    V10CredentialProposalRequestMand:
      required:
      - connection_id
      - credential_proposal
      type: object
      properties:
        auto_remove:
          type: boolean
          description: Whether to remove the credential exchange record on completion
            (overrides --preserve-exchange-records configuration setting)
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        connection_id:
          type: string
          description: Connection identifier
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        credential_proposal:
          $ref: '#/components/schemas/CredentialPreview'
        issuer_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Credential issuer DID
          example: WgWxqztrNooG92RXvxSTWv
        schema_id:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
          description: Schema identifier
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        schema_issuer_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Schema issuer DID
          example: WgWxqztrNooG92RXvxSTWv
        schema_name:
          type: string
          description: Schema name
          example: preferences
        schema_version:
          pattern: ^[0-9.]+$
          type: string
          description: Schema version
          example: "1.0"
        trace:
          type: boolean
          description: Whether to trace event (default false)
          example: false
    V10CredentialProposalRequestOpt:
      required:
      - connection_id
      type: object
      properties:
        auto_remove:
          type: boolean
          description: Whether to remove the credential exchange record on completion
            (overrides --preserve-exchange-records configuration setting)
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        connection_id:
          type: string
          description: Connection identifier
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        credential_proposal:
          $ref: '#/components/schemas/CredentialPreview'
        issuer_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Credential issuer DID
          example: WgWxqztrNooG92RXvxSTWv
        schema_id:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
          description: Schema identifier
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        schema_issuer_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Schema issuer DID
          example: WgWxqztrNooG92RXvxSTWv
        schema_name:
          type: string
          description: Schema name
          example: preferences
        schema_version:
          pattern: ^[0-9.]+$
          type: string
          description: Schema version
          example: "1.0"
        trace:
          type: boolean
          description: Whether to trace event (default false)
          example: false
    V10CredentialStoreRequest:
      type: object
      properties:
        credential_id:
          type: string
    V10PresentationCreateRequestRequest:
      required:
      - proof_request
      type: object
      properties:
        comment:
          type: string
          nullable: true
        proof_request:
          $ref: '#/components/schemas/IndyProofRequest'
        trace:
          type: boolean
          description: Whether to trace event (default false)
          example: false
    V10PresentationExchange:
      type: object
      properties:
        auto_present:
          type: boolean
          description: Prover choice to auto-present proof as verifier requests
          example: false
        connection_id:
          type: string
          description: Connection identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-05-11 13:20:48Z
        error_msg:
          type: string
          description: Error message
          example: Invalid structure
        initiator:
          type: string
          description: 'Present-proof exchange initiator: self or external'
          example: self
          enum:
          - self
          - external
        presentation:
          type: object
          properties: {}
          description: (Indy) presentation (also known as proof)
        presentation_exchange_id:
          type: string
          description: Presentation exchange identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        presentation_proposal_dict:
          type: object
          properties: {}
          description: Serialized presentation proposal message
        presentation_request:
          type: object
          properties: {}
          description: (Indy) presentation request (also known as proof request)
        presentation_request_dict:
          type: object
          properties: {}
          description: Serialized presentation request message
        role:
          type: string
          description: 'Present-proof exchange role: prover or verifier'
          example: prover
          enum:
          - prover
          - verifier
        state:
          type: string
          description: Present-proof exchange state
          example: verified
        thread_id:
          type: string
          description: Thread identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        trace:
          type: boolean
          description: Record trace information, based on agent configuration
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-05-11 13:20:48Z
        verified:
          type: string
          description: 'Whether presentation is verified: true or false'
          example: "true"
          enum:
          - "true"
          - "false"
    V10PresentationExchangeList:
      type: object
      properties:
        results:
          type: array
          description: Aries RFC 37 v1.0 presentation exchange records
          items:
            $ref: '#/components/schemas/V10PresentationExchange'
    V10PresentationProblemReportRequest:
      required:
      - explain_ltxt
      type: object
      properties:
        explain_ltxt:
          type: string
    V10PresentationProposalRequest:
      required:
      - connection_id
      - presentation_proposal
      type: object
      properties:
        auto_present:
          type: boolean
          description: Whether to respond automatically to presentation requests,
            building and presenting requested proof
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        connection_id:
          type: string
          description: Connection identifier
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        presentation_proposal:
          $ref: '#/components/schemas/PresentationPreview'
        trace:
          type: boolean
          description: Whether to trace event (default false)
          example: false
    V10PresentationRequest:
      required:
      - requested_attributes
      - requested_predicates
      - self_attested_attributes
      type: object
      properties:
        requested_attributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IndyRequestedCredsRequestedAttr'
          description: Nested object mapping proof request attribute referents to
            requested-attribute specifiers
        requested_predicates:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/IndyRequestedCredsRequestedPred'
          description: Nested object mapping proof request predicate referents to
            requested-predicate specifiers
        self_attested_attributes:
          type: object
          additionalProperties:
            type: string
            description: Self-attested attribute values to use in requested-credentials
              structure for proof construction
            example: self_attested_value
          description: Self-attested attributes to build into proof
        trace:
          type: boolean
          description: Whether to trace event (default false)
          example: false
    V10PresentationSendRequestRequest:
      required:
      - connection_id
      - proof_request
      type: object
      properties:
        comment:
          type: string
          nullable: true
        connection_id:
          type: string
          description: Connection identifier
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        proof_request:
          $ref: '#/components/schemas/IndyProofRequest'
        trace:
          type: boolean
          description: Whether to trace event (default false)
          example: false
    V20CredAttrSpec:
      required:
      - name
      - value
      type: object
      properties:
        mime-type:
          type: string
          description: 'MIME type: omit for (null) default'
          nullable: true
          example: image/jpeg
        name:
          type: string
          description: Attribute name
          example: favourite_drink
        value:
          type: string
          description: 'Attribute value: base64-encode if MIME type is present'
          example: martini
    V20CredCreate:
      required:
      - credential_preview
      - filter
      type: object
      properties:
        auto_remove:
          type: boolean
          description: Whether to remove the credential exchange record on completion
            (overrides --preserve-exchange-records configuration setting)
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        credential_preview:
          $ref: '#/components/schemas/V20CredPreview'
        filter:
          type: object
          description: Credential specification criteria by format
          allOf:
          - $ref: '#/definitions/V20CredFilter'
        trace:
          type: boolean
          description: Whether to trace event (default false)
          example: false
    V20CredExRecord:
      type: object
      properties:
        auto_issue:
          type: boolean
          description: Issuer choice to issue to request in this credential exchange
          example: false
        auto_offer:
          type: boolean
          description: Holder choice to accept offer in this credential exchange
          example: false
        auto_remove:
          type: boolean
          description: Issuer choice to remove this credential exchange record when
            complete
          example: false
        conn_id:
          type: string
          description: Connection identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-05-11 13:20:48Z
        cred_ex_id:
          type: string
          description: Credential exchange identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        cred_id_stored:
          type: string
          description: Credential identifier stored in wallet
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        cred_issue:
          type: object
          properties: {}
          description: Serialized credential issue message
        cred_offer:
          type: object
          properties: {}
          description: Serialized credential offer message
        cred_preview:
          type: object
          properties: {}
          description: Serialized credential preview from credential proposal
          readOnly: true
        cred_proposal:
          type: object
          properties: {}
          description: Serialized credential proposal message
        cred_request:
          type: object
          properties: {}
          description: Serialized credential request message
        cred_request_metadata:
          type: object
          properties: {}
          description: (Indy) credential request metadata
        error_msg:
          type: string
          description: Error message
          example: The front fell off
        initiator:
          type: string
          description: 'Issue-credential exchange initiator: self or external'
          example: self
          enum:
          - self
          - external
        parent_thread_id:
          type: string
          description: Parent thread identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        role:
          type: string
          description: 'Issue-credential exchange role: holder or issuer'
          example: issuer
          enum:
          - issuer
          - holder
        state:
          type: string
          description: Issue-credential exchange state
          example: done
          enum:
          - proposal-sent
          - proposal-received
          - offer-sent
          - offer-received
          - request-sent
          - request-received
          - credential-issued
          - credential-received
          - done
        thread_id:
          type: string
          description: Thread identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        trace:
          type: boolean
          description: Record trace information, based on agent configuration
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-05-11 13:20:48Z
    V20CredExRecordDIF:
      type: object
      properties:
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-05-11 13:20:48Z
        cred_ex_dif_id:
          type: string
          description: Record identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        cred_ex_id:
          type: string
          description: Corresponding v2.0 credential exchange record identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        item:
          type: object
          properties: {}
          description: DIF item
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        state:
          type: string
          description: Current record state
          example: active
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-05-11 13:20:48Z
    V20CredExRecordDetail:
      type: object
      properties:
        cred_ex_record:
          type: object
          description: Credential exchange record
          allOf:
          - $ref: '#/definitions/V20CredExRecord'
        dif:
          $ref: '#/components/schemas/V20CredExRecordDIF'
        indy:
          $ref: '#/components/schemas/V20CredExRecordIndy'
    V20CredExRecordIndy:
      type: object
      properties:
        created_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of record creation
          example: 2021-05-11 13:20:48Z
        cred_ex_id:
          type: string
          description: Corresponding v2.0 credential exchange record identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        cred_ex_indy_id:
          type: string
          description: Record identifier
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        cred_request_metadata:
          type: object
          properties: {}
          description: Credential request metadata for indy holder
        cred_rev_id:
          pattern: ^[1-9][0-9]*$
          type: string
          description: Credential revocation identifier within revocation registry
          example: "12345"
        rev_reg_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)
          type: string
          description: Revocation registry identifier
          example: WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
        state:
          type: string
          description: Current record state
          example: active
        updated_at:
          pattern: ^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$
          type: string
          description: Time of last record update
          example: 2021-05-11 13:20:48Z
    V20CredExRecordListResult:
      type: object
      properties:
        results:
          type: array
          description: Credential exchange records and corresponding detail records
          items:
            $ref: '#/components/schemas/V20CredExRecordDetail'
    V20CredFilter:
      type: object
      properties:
        dif:
          type: object
          description: Credential filter for DIF
          allOf:
          - $ref: '#/definitions/V20CredFilterDIF'
        indy:
          type: object
          description: Credential filter for indy
          allOf:
          - $ref: '#/definitions/V20CredFilterIndy'
    V20CredFilterDIF:
      type: object
      properties:
        some_dif_criterion:
          type: string
          description: Placeholder for W3C/DIF/JSON-LD filtration criterion
    V20CredFilterIndy:
      type: object
      properties:
        cred_def_id:
          pattern: ^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$
          type: string
          description: Credential definition identifier
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        issuer_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Credential issuer DID
          example: WgWxqztrNooG92RXvxSTWv
        schema_id:
          pattern: ^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$
          type: string
          description: Schema identifier
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        schema_issuer_did:
          pattern: ^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$
          type: string
          description: Schema issuer DID
          example: WgWxqztrNooG92RXvxSTWv
        schema_name:
          type: string
          description: Schema name
          example: preferences
        schema_version:
          pattern: ^[0-9.]+$
          type: string
          description: Schema version
          example: "1.0"
    V20CredIssueProblemReportRequest:
      required:
      - explain_ltxt
      type: object
      properties:
        explain_ltxt:
          type: string
    V20CredIssueRequest:
      type: object
      properties:
        comment:
          type: string
          description: Human-readable comment
          nullable: true
    V20CredOfferRequest:
      required:
      - connection_id
      - credential_preview
      - filter
      type: object
      properties:
        auto_issue:
          type: boolean
          description: Whether to respond automatically to credential requests, creating
            and issuing requested credentials
        auto_remove:
          type: boolean
          description: Whether to remove the credential exchange record on completion
            (overrides --preserve-exchange-records configuration setting)
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        connection_id:
          type: string
          description: Connection identifier
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        credential_preview:
          $ref: '#/components/schemas/V20CredPreview'
        filter:
          type: object
          description: Credential specification criteria by format
          allOf:
          - $ref: '#/definitions/V20CredFilter'
        trace:
          type: boolean
          description: Whether to trace event (default false)
          example: false
    V20CredPreview:
      required:
      - attributes
      type: object
      properties:
        '@type':
          type: string
          description: Message type identifier
          example: issue-credential/2.0/credential-preview
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/V20CredAttrSpec'
    V20CredProposalRequestPreviewMand:
      required:
      - connection_id
      - credential_preview
      - filter
      type: object
      properties:
        auto_remove:
          type: boolean
          description: Whether to remove the credential exchange record on completion
            (overrides --preserve-exchange-records configuration setting)
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        connection_id:
          type: string
          description: Connection identifier
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        credential_preview:
          $ref: '#/components/schemas/V20CredPreview'
        filter:
          type: object
          description: Credential specification criteria by format
          allOf:
          - $ref: '#/definitions/V20CredFilter'
        trace:
          type: boolean
          description: Whether to trace event (default false)
          example: false
    V20CredProposalRequestPreviewOpt:
      required:
      - connection_id
      - filter
      type: object
      properties:
        auto_remove:
          type: boolean
          description: Whether to remove the credential exchange record on completion
            (overrides --preserve-exchange-records configuration setting)
        comment:
          type: string
          description: Human-readable comment
          nullable: true
        connection_id:
          type: string
          description: Connection identifier
          format: uuid
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        credential_preview:
          $ref: '#/components/schemas/V20CredPreview'
        filter:
          type: object
          description: Credential specification criteria by format
          allOf:
          - $ref: '#/definitions/V20CredFilter'
        trace:
          type: boolean
          description: Whether to trace event (default false)
          example: false
    V20CredStoreRequest:
      type: object
      properties:
        credential_id:
          type: string
    V20IssueCredentialModuleResponse:
      type: object
    WalletModuleResponse:
      type: object
